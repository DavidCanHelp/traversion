apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: traversion-ingress
  namespace: traversion-system
  labels:
    app.kubernetes.io/name: traversion
    app.kubernetes.io/component: ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/rate-limit: "1000"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
    nginx.ingress.kubernetes.io/websocket-services: "traversion-service"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - api.traversion.company.com
    - ws.traversion.company.com
    secretName: traversion-tls
  rules:
  - host: api.traversion.company.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: traversion-service
            port:
              number: 3333
  - host: ws.traversion.company.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: traversion-service
            port:
              number: 3334
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: traversion-monitoring-ingress
  namespace: traversion-system
  labels:
    app.kubernetes.io/name: traversion
    app.kubernetes.io/component: monitoring-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: monitoring-auth
    nginx.ingress.kubernetes.io/auth-realm: "Traversion Monitoring"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - monitoring.traversion.company.com
    - grafana.traversion.company.com
    secretName: traversion-monitoring-tls
  rules:
  - host: monitoring.traversion.company.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: prometheus-service
            port:
              number: 9090
  - host: grafana.traversion.company.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: grafana-service
            port:
              number: 3000
---
apiVersion: v1
kind: Secret
metadata:
  name: monitoring-auth
  namespace: traversion-system
  labels:
    app.kubernetes.io/name: traversion
    app.kubernetes.io/component: monitoring-auth
type: Opaque
data:
  auth: YWRtaW46JGFwcjEkSDZ1c2c2M3kkRmFNanVKZ0lLeW8xVlFZNjFDR0d0MA== # admin:monitoring123
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: devops@company.com
    privateKeySecretRef:
      name: letsencrypt-prod
    solvers:
    - http01:
        ingress:
          class: nginx